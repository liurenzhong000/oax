<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oax.mapper.front.MemberMapper">
    <resultMap id="BaseResultMap" type="com.oax.entity.front.Member">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="transaction_password" jdbcType="VARCHAR" property="transactionPassword"/>
        <result column="need_transaction_password" jdbcType="INTEGER" property="needTransactionPassword"/>
        <result column="verification_type" jdbcType="INTEGER" property="verificationType"/>
        <result column="lock_status" jdbcType="INTEGER" property="lockStatus"/>
        <result column="check_status" jdbcType="INTEGER" property="checkStatus"/>
        <result column="google_key" jdbcType="VARCHAR" property="googleKey"/>
        <result column="id_name" jdbcType="VARCHAR" property="idName"/>
        <result column="id_no" jdbcType="VARCHAR" property="idNo"/>
        <result column="id_image_a" jdbcType="VARCHAR" property="idImageA"/>
        <result column="id_image_b" jdbcType="VARCHAR" property="idImageB"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="from_user_id" jdbcType="INTEGER" property="fromUserId"/>
        <result column="register_time" jdbcType="TIMESTAMP" property="registerTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="source" jdbcType="INTEGER" property="source"/>
        <result column="email_status" jdbcType="INTEGER" property="emailStatus"/>
        <result column="phone_status" jdbcType="INTEGER" property="phoneStatus"/>
        <result column="google_status" jdbcType="INTEGER" property="googleStatus"/>
        <result column="country" jdbcType="VARCHAR" property="country"/>
        <result column="register_type" jdbcType="INTEGER" property="registerType"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="api_key" jdbcType="VARCHAR" property="apiKey"/>
        <result column="merchant" jdbcType="BIT" property="merchant"/>
        <result column="freezing" jdbcType="BIT" property="freezing"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, phone, email, password, transaction_password,need_transaction_password, verification_type, lock_status,
        check_status,google_key, id_name, id_no, id_image_a, id_image_b, code, from_user_id, register_time,
        update_time, level, source,email_status,phone_status,google_status,country,register_type,type,api_key,merchant,freezing
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from oax.user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByApiKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from oax.user
        where api_key = #{apiKey,jdbcType=VARCHAR} and type=2
    </select>

    <select id="selectInvateCounts" resultType="java.lang.Integer">
        select count(1)
        from oax.user
        where from_user_id = #{id,jdbcType=INTEGER}
        <if test="flag==1">
            and check_status>1
        </if>
    </select>

    <select id="getByUserIdQueryUserInvite" parameterType="com.oax.entity.admin.param.UserInviteParam"
            resultType="com.oax.entity.admin.vo.UserInviteVo">
        select
        u.id userId,
        u.id_name name,
        u.phone,
        u.email,
        u.verification_type verificationType,
        u.id_no idNo,
        u.register_time registerTime,
        u.level,
        u.lock_status lockStatus,
        u.check_time checkTime
        FROM oax.user u
        where u.from_user_id = #{userId}
        <if test="beginTime != null">
            and u.register_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null">
            and u.register_time &lt;= #{endTime}
        </if>
        <if test="level != null and level != ''">
            and u.level = #{level}
        </if>
        order by u.register_time
    </select>

    <select id="selectByPhoneOrEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from oax.user
        where phone= #{username,jdbcType=VARCHAR} or email= #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectIdByCode" parameterType="java.lang.String" resultType="java.lang.Integer">
        select id from oax.user
        where code= #{code,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from oax.user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.oax.entity.front.Member">
        insert into oax.user (id, phone, email,
        password, transaction_password, verification_type,
        lock_status, check_status, id_name,
        id_no, id_image_a, id_image_b,
        code, from_user_id, register_time,
        update_time, level, source
        )
        values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR}, #{transactionPassword,jdbcType=VARCHAR}, #{verificationType,jdbcType=INTEGER},
        #{lockStatus,jdbcType=INTEGER}, #{checkStatus,jdbcType=INTEGER}, #{idName,jdbcType=VARCHAR},
        #{idNo,jdbcType=VARCHAR}, #{idImageA,jdbcType=VARCHAR}, #{idImageB,jdbcType=VARCHAR},
        #{code,jdbcType=VARCHAR}, #{fromUserId,jdbcType=INTEGER}, #{registerTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{level,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.oax.entity.front.Member">
        insert into oax.user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="transactionPassword != null">
                transaction_password,
            </if>
            <if test="verificationType != null">
                verification_type,
            </if>
            <if test="lockStatus != null">
                lock_status,
            </if>
            <if test="checkStatus != null">
                check_status,
            </if>
            <if test="idName != null">
                id_name,
            </if>
            <if test="idNo != null">
                id_no,
            </if>
            <if test="idImageA != null">
                id_image_a,
            </if>
            <if test="idImageB != null">
                id_image_b,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="fromUserId != null">
                from_user_id,
            </if>
            <if test="registerTime != null">
                register_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="source != null">
                source,
            </if>
            <if test="emailStatus != null">
                email_status,
            </if>

            <if test="phoneStatus != null">
                phone_status,
            </if>
            <if test="googleStatus != null">
                google_status,
            </if>
            <if test="country!= null">
                country,
            </if>
            <if test="googleKey!= null">
                google_key,
            </if>
            <if test="registerType!= null">
                register_type,
            </if>
            <if test="type!= null">
                type,
            </if>
            <if test="apiKey!= null">
                api_key,
            </if>
             <if test="needTransactionPassword!= null">
                need_transaction_password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="transactionPassword != null">
                #{transactionPassword,jdbcType=VARCHAR},
            </if>
            <if test="verificationType != null">
                #{verificationType,jdbcType=INTEGER},
            </if>
            <if test="lockStatus != null">
                #{lockStatus,jdbcType=INTEGER},
            </if>
            <if test="checkStatus != null">
                #{checkStatus,jdbcType=INTEGER},
            </if>
            <if test="idName != null">
                #{idName,jdbcType=VARCHAR},
            </if>
            <if test="idNo != null">
                #{idNo,jdbcType=VARCHAR},
            </if>
            <if test="idImageA != null">
                #{idImageA,jdbcType=VARCHAR},
            </if>
            <if test="idImageB != null">
                #{idImageB,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="fromUserId != null">
                #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="registerTime != null">
                #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="source != null">
                #{source,jdbcType=INTEGER},
            </if>

            <if test="emailStatus != null">
                #{emailStatus,jdbcType=INTEGER},
            </if>

            <if test="phoneStatus != null">
                #{phoneStatus,jdbcType=INTEGER},
            </if>
            <if test="googleStatus != null">
                #{googleStatus,jdbcType=INTEGER},
            </if>
            <if test="country != null">
                #{country,jdbcType=VARCHAR},
            </if>
            <if test="googleKey != null">
                #{googleKey,jdbcType=VARCHAR},
            </if>
            <if test="registerType != null">
                #{registerType,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="apiKey != null">
                #{apiKey,jdbcType=VARCHAR},
            </if>
             <if test="needTransactionPassword != null">
                #{needTransactionPassword,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.oax.entity.front.Member">
        update oax.user
        <set>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="transactionPassword != null">
                transaction_password = #{transactionPassword,jdbcType=VARCHAR},
            </if>
            <if test="needTransactionPassword != null">
                need_transaction_password = #{needTransactionPassword,jdbcType=INTEGER},
            </if>
            <if test="verificationType != null">
                verification_type = #{verificationType,jdbcType=INTEGER},
            </if>
            <if test="lockStatus != null">
                lock_status = #{lockStatus,jdbcType=INTEGER},
            </if>
            <if test="checkStatus != null">
                check_status = #{checkStatus,jdbcType=INTEGER},
            </if>
            <if test="googleKey != null">
                google_key = #{googleKey,jdbcType=VARCHAR},
            </if>
            <if test="idName != null">
                id_name = #{idName,jdbcType=VARCHAR},
            </if>
            <if test="idNo != null">
                id_no = #{idNo,jdbcType=VARCHAR},
            </if>
            <if test="idImageA != null">
                id_image_a = #{idImageA,jdbcType=VARCHAR},
            </if>
            <if test="idImageB != null">
                id_image_b = #{idImageB,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="fromUserId != null">
                from_user_id = #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="registerTime != null">
                register_time = #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="source != null">
                source = #{source,jdbcType=INTEGER},
            </if>

            <if test="emailStatus != null">
                email_status = #{emailStatus,jdbcType=INTEGER},
            </if>
            <if test="phoneStatus != null">
                phone_status = #{phoneStatus,jdbcType=INTEGER},
            </if>
            <if test="googleStatus != null">
                google_status = #{googleStatus,jdbcType=INTEGER},
            </if>
            <if test="country != null">
                country = #{country,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="apiKey != null">
                api_key = #{apiKey,jdbcType=VARCHAR},
            </if>
            <if test="merchant != null">
                merchant = #{merchant,jdbcType=BIT},
            </if>
            <if test="freezing != null">
                freezing = #{freezing,jdbcType=BIT}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.oax.entity.front.Member">
        update oax.user
        set phone = #{phone,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        transaction_password = #{transactionPassword,jdbcType=VARCHAR},
        verification_type = #{verificationType,jdbcType=INTEGER},
        lock_status = #{lockStatus,jdbcType=INTEGER},
        check_status = #{checkStatus,jdbcType=INTEGER},
        id_name = #{idName,jdbcType=VARCHAR},
        id_no = #{idNo,jdbcType=VARCHAR},
        id_image_a = #{idImageA,jdbcType=VARCHAR},
        id_image_b = #{idImageB,jdbcType=VARCHAR},
        code = #{code,jdbcType=VARCHAR},
        from_user_id = #{fromUserId,jdbcType=INTEGER},
        register_time = #{registerTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        level = #{level,jdbcType=INTEGER},
        source = #{source,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getChildrenUserByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from oax.user
        where find_in_set(id, getChildrenUser( #{userId,jdbcType=INTEGER}));
    </select>
    <select id="getIdsByFromUserId" resultType="java.lang.Integer">
        select id from `user` where from_user_id = #{fromUserId}
    </select>
    <select id="getIdsByFromUserIds" resultType="java.lang.Integer">
        select id from `user` where from_user_id in
        <foreach collection="userIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="getCheckIdsByFromUserId" resultType="java.lang.Integer">
        select id from `user` where from_user_id = #{fromUserId} and check_status>1
    </select>
    <select id="getCheckIdsByFromUserIds" resultType="java.lang.Integer">
        select id from `user` where from_user_id in
        <foreach collection="userIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        and check_status>1
    </select>

    <select id="getInviteUserVoByIds" resultType="com.oax.entity.front.vo.InviteUserVo">
        select id, register_time, check_status, `level` from `user` where id in
        <foreach collection="userIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by field(id,
        <foreach collection="userIds" item="item" index="index"  separator=",">
            #{item}
        </foreach>
        )
    </select>

    <select id="existByIdNo" resultType="java.lang.Boolean">
        select if(count(id) > 0,1,0) from `user` where id_no = #{idNo} and check_status in (1,2)
    </select>
    <select id="getIdsByType" resultType="java.lang.Integer">
        select id from `user` where `type` = #{type}
    </select>

    <select id="getPhoneOrEmailById" resultType="java.lang.String">
        SELECT IFNULL(phone, email) FROM USER WHERE id = #{id}
    </select>
</mapper>